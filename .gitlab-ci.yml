# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

include:
  - local: "workflow/trello-groomer-ci.yml"

variables:
  ARGUMENT: ""
# stages:
#  - run_tasks

# run_tasks:
#   stage: run_tasks
#   script:
#     - |
#       if [ "$ARGUMENT" == "trello-groomer" ]; then
#         echo "Running Task 1"
#         # Add commands for Task 1
#       elif [ "$ARGUMENT" == "task2" ]; then
#         echo "Running Task 2"
#         # Add commands for Task 2
#       else
#         echo "Invalid argument provided"
#         exit 1
#       fi
#    rules:
#      - if: $CI_COMMIT_BRANCH == "main"

# run_tasks:
#  stage: run_tasks
#  script:
#    - echo "Running Task 2"
#  rules:
#    - if: $CI_COMMIT_BRANCH == "main" && $ARGUMENT == "task2"

# stages: # List of stages for jobs, and their order of execution
#   - build
#   - test
#   - deploy

# build-job: # This job runs in the build stage, which runs first.
#   stage: build
#   image: docker:19.03.12
#   tags:
#     - docker
#   rules:
#     - if: '$CI_PIPELINE_SOURCE == "web"' # Runs for web IDE triggers
#     - if: "$CI_COMMIT_TAG" # Runs for Git tags
#     - if: '$CI_COMMIT_BRANCH == "main"' # Runs only on the main branch
#   services:
#     - docker:19.03.12-dind
#   before_script:
#     - apk add --no-cache git </dev/null
#     - mkdir -p ~/.ssh
#     - chmod 700 ~/.ssh
#     - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
#     - echo "$SSH_PUBLIC_KEY" > ~/.ssh/id_rsa.pub
#     - chmod 600 ~/.ssh/id_rsa
#     - chmod 600 ~/.ssh/id_rsa.pub
#     - eval $(ssh-agent -s)
#     - ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
#   script:
#     - git clone git@github.com:sth144/trello-groomer.git
#     - cd trello-groomer
#     - docker build -t trello-groomer .

# unit-test-job: # This job runs in the test stage.
#   stage: test # It only starts when the job in the build stage completes successfully.
#   tags:
#     - k8s
#   script:
#     - echo "Running unit tests on k8s... This will take about 60 seconds."
#     - sleep 60
#     - echo "Code coverage is 90%"

# lint-test-job: # This job also runs in the test stage.
#   stage: test # It can run at the same time as unit-test-job (in parallel).
#   script:
#     - echo "Linting code... This will take about 10 seconds."
#     - sleep 10
#     - echo "No lint issues found."

# deploy-job: # This job runs in the deploy stage.
#   stage: deploy # It only runs when *both* jobs in the test stage complete successfully.
#   environment: production
#   script:
#     - echo "Deploying application..."
#     - echo "Application successfully deployed."
#     - echo "Hello"
