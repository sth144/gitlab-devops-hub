trello_groomer_build:
  image: docker:latest
  stage: build
  tags:
    - local
    - docker
  variables:
    REPO: $REPO
    BRANCH: $BRANCH
    # DOCKER_HOST: tcp://docker:2375
    # DOCKER_DRIVER: overlay2
    # DOCKER_TLS_CERTDIR: "" # Disable TLS for Docker-in-Docker
  before_script:
    - apk add --no-cache git
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
  script:
    - rm -rf ./source-code
    - git clone --depth 1 --branch "$BRANCH" "https://github.com/sth144/$REPO.git" source-code
    - cd ./source-code
    - docker build --target build -t "$DOCKER_USERNAME/$REPO:$BRANCH-build" .
    - docker save $DOCKER_USERNAME/$REPO:$BRANCH-build -o ./build-image.tar
    - ls
    - docker build --target deploy -t "$DOCKER_USERNAME/$REPO:$BRANCH" .
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker push "$DOCKER_USERNAME/$REPO:$BRANCH"
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - source-code/
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $REPO == "trello-groomer"

trello_groomer_test:
  stage: test
  image: docker:latest
  tags:
    - local
    - docker
  variables:
    REPO: $REPO
    BRANCH: $BRANCH
  dependencies:
    - trello_groomer_build
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - source-code/
  before_script:
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
  script:
    - cd ./source-code
    - ls
    - docker load -i ./build-image.tar
    - docker build --target test -t $REPO:test .
    - docker run --rm $REPO:test
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $REPO == "trello-groomer"

trello_groomer_deploy:
  image: bitnami/kubectl:latest
  stage: deploy
  tags:
    - k8s
  dependencies:
    - trello_groomer_build
    - trello_groomer_test
  before_script:
    - echo "$KUBE_CA_PEM" | base64 -d > ca.crt
    - |
      cat <<EOF > kubeconfig
      apiVersion: v1
      kind: Config
      clusters:
      - name: cluster
        cluster:
          certificate-authority: ca.crt
          server: $K8S_API_SERVER
      users:
      - name: deployer
        user:
          token: $K8S_TOKEN
      contexts:
      - name: context
        context:
          cluster: cluster
          user: deployer
      current-context: context
      EOF
    - export KUBECONFIG=$PWD/kubeconfig
    - cat ./kubeconfig
  script:
    - kubectl config set-cluster kubernetes --server=$K8S_API_SERVER --insecure-skip-tls-verify=true
    - kubectl config set-credentials kubernetes-admin --token=$K8S_TOKEN
    - kubectl config set-context default --cluster=kubernetes --user=kubernetes-admin --namespace=default
    - kubectl config use-context default

    - kubectl get nodes
    - kubectl get pods

    # Force a redeploy with annotation (Option 1)
    - export NOW=$(date +%s)
    - kubectl patch deployment trello-groomer-todo --type=merge --patch "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"ci-refresh\":\"$NOW\"}}}}}"

    # OR update image (Option 2)
    # - kubectl set image deployment/$DEPLOYMENT_NAME $CONTAINER_NAME=$DOCKER_IMAGE:$CI_COMMIT_REF_NAME
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $REPO == "trello-groomer"

trello_groomer_ci_loaded:
  stage: preflight
  tags:
    - k8s
  script:
    - echo "Loaded Trello Groomer CI configuration"
